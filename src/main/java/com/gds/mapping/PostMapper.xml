<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gds.dao.PostMapper">
  <resultMap id="BaseResultMap" type="com.gds.entity.Post">
    <id column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="blog_title" jdbcType="VARCHAR" property="blogTitle" />
    <result column="blog_author" jdbcType="VARCHAR" property="blogAuthor" />
    <result column="blog_creat_time" jdbcType="TIMESTAMP" property="blogCreatTime" />
    <result column="blog_level" jdbcType="VARCHAR" property="blogLevel" />
    <result column="blog_sort" jdbcType="VARCHAR" property="blogSort" />
    <result column="view" jdbcType="INTEGER" property="view" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="standby001" jdbcType="VARCHAR" property="standby001" />
    <result column="standby002" jdbcType="VARCHAR" property="standby002" />
    <result column="standby003" jdbcType="VARCHAR" property="standby003" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gds.entity.Post">
    <result column="blog_content" jdbcType="LONGVARCHAR" property="blogContent" />
  </resultMap>
  <sql id="Base_Column_List">
    blog_id, blog_title, blog_author, blog_creat_time, blog_level, blog_sort, view, status, 
    standby001, standby002, standby003
  </sql>
  <sql id="Blob_Column_List">
    blog_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_post
    where blog_id = #{blogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_post
    where blog_id = #{blogId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gds.entity.Post">
    insert into blog_post (blog_id, blog_title, blog_author, 
      blog_creat_time, blog_level, blog_sort, 
      view, status, standby001, 
      standby002, standby003, blog_content
      )
    values (#{blogId,jdbcType=INTEGER}, #{blogTitle,jdbcType=VARCHAR}, #{blogAuthor,jdbcType=VARCHAR}, 
      #{blogCreatTime,jdbcType=TIMESTAMP}, #{blogLevel,jdbcType=VARCHAR}, #{blogSort,jdbcType=VARCHAR}, 
      #{view,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{standby001,jdbcType=VARCHAR}, 
      #{standby002,jdbcType=VARCHAR}, #{standby003,jdbcType=VARCHAR}, #{blogContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gds.entity.Post">
    insert into blog_post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="blogTitle != null">
        blog_title,
      </if>
      <if test="blogAuthor != null">
        blog_author,
      </if>
      <if test="blogCreatTime != null">
        blog_creat_time,
      </if>
      <if test="blogLevel != null">
        blog_level,
      </if>
      <if test="blogSort != null">
        blog_sort,
      </if>
      <if test="view != null">
        view,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="standby001 != null">
        standby001,
      </if>
      <if test="standby002 != null">
        standby002,
      </if>
      <if test="standby003 != null">
        standby003,
      </if>
      <if test="blogContent != null">
        blog_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="blogTitle != null">
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogAuthor != null">
        #{blogAuthor,jdbcType=VARCHAR},
      </if>
      <if test="blogCreatTime != null">
        #{blogCreatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogLevel != null">
        #{blogLevel,jdbcType=VARCHAR},
      </if>
      <if test="blogSort != null">
        #{blogSort,jdbcType=VARCHAR},
      </if>
      <if test="view != null">
        #{view,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="standby001 != null">
        #{standby001,jdbcType=VARCHAR},
      </if>
      <if test="standby002 != null">
        #{standby002,jdbcType=VARCHAR},
      </if>
      <if test="standby003 != null">
        #{standby003,jdbcType=VARCHAR},
      </if>
      <if test="blogContent != null">
        #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gds.entity.Post">
    update blog_post
    <set>
      <if test="blogTitle != null">
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogAuthor != null">
        blog_author = #{blogAuthor,jdbcType=VARCHAR},
      </if>
      <if test="blogCreatTime != null">
        blog_creat_time = #{blogCreatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogLevel != null">
        blog_level = #{blogLevel,jdbcType=VARCHAR},
      </if>
      <if test="blogSort != null">
        blog_sort = #{blogSort,jdbcType=VARCHAR},
      </if>
      <if test="view != null">
        view = #{view,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="standby001 != null">
        standby001 = #{standby001,jdbcType=VARCHAR},
      </if>
      <if test="standby002 != null">
        standby002 = #{standby002,jdbcType=VARCHAR},
      </if>
      <if test="standby003 != null">
        standby003 = #{standby003,jdbcType=VARCHAR},
      </if>
      <if test="blogContent != null">
        blog_content = #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gds.entity.Post">
    update blog_post
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_author = #{blogAuthor,jdbcType=VARCHAR},
      blog_creat_time = #{blogCreatTime,jdbcType=TIMESTAMP},
      blog_level = #{blogLevel,jdbcType=VARCHAR},
      blog_sort = #{blogSort,jdbcType=VARCHAR},
      view = #{view,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      standby001 = #{standby001,jdbcType=VARCHAR},
      standby002 = #{standby002,jdbcType=VARCHAR},
      standby003 = #{standby003,jdbcType=VARCHAR},
      blog_content = #{blogContent,jdbcType=LONGVARCHAR}
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gds.entity.Post">
    update blog_post
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_author = #{blogAuthor,jdbcType=VARCHAR},
      blog_creat_time = #{blogCreatTime,jdbcType=TIMESTAMP},
      blog_level = #{blogLevel,jdbcType=VARCHAR},
      blog_sort = #{blogSort,jdbcType=VARCHAR},
      view = #{view,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      standby001 = #{standby001,jdbcType=VARCHAR},
      standby002 = #{standby002,jdbcType=VARCHAR},
      standby003 = #{standby003,jdbcType=VARCHAR}
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>


  <!--按条件查询总数-->
  <select id="selectPostCount" resultType="java.lang.Integer" parameterType="Map">
    select count(1) from blog_post
    <where>
      <if test="blog_title != null and blog_title != ''">
        blog_title like "%"#{blogTitle}"%"
      </if>
      <if test="blog_sort != null and blog_sort != ''">
        and blog_sort like "%"#{blogSort}"%"
      </if>
    </where>
  </select>

  <!--分页查询  -->
  <select id="selectPostList"  resultMap="BaseResultMap" parameterType="Map">
    select * from blog_post
    <where>
      <if test="blogAuthor != null and blogAuthor != ''">
        blog_author like "%"#{blogAuthor}"%"
      </if>
      <if test="blogSort != null and blogSort != ''">
        and blog_sort like "%"#{blogSort}"%"
      </if>
      <if test="postTitle != null and postTitle != ''">
        and blog_title like "%"#{postTitle}"%"
      </if>
    </where>
    LIMIT #{startRow},#{size}
  </select>

  <!--按照级别排序-->
  <select id="selectPostByLevel" resultMap="BaseResultMap">
    select b.blog_id, b.blog_title, b.standby003 , b.blog_creat_time
    from blog_post b
    where b.blog_level !='0'
    order by b.blog_level desc
  </select>

  <!--按照时间排序-->
  <select id="selectPostByTime" resultMap="BaseResultMap">
    select blog_id, blog_title, blog_author, blog_creat_time, blog_sort, view, standby003
    from blog_post
    order by blog_creat_time desc;
  </select>
</mapper>